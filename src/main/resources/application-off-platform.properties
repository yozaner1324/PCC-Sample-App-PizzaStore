# Demonstrates the case where the app is running off-platform (not on any foundation).

spring.data.gemfire.security.ssl.enable-endpoint-identification=true
spring.data.gemfire.security.ssl.components=all
spring.data.gemfire.pool.default.socket-factory-bean-name=mySocketFactory



# Details of Truststore that you would have created
gemfire.ssl-truststore=/tmp/mytruststore1.jks
gemfire.ssl-truststore-password=123456
gemfire.ssl-keystore=
gemfire.ssl-keystore-password=

#javax.net.ssl.trustStore=/tmp/mytruststore1.jks
#javax.net.ssl.trustStorePassword=123456


# Get the below from service key
spring.data.gemfire.pool.locators=ef42a70b-0bde-4501-9a09-392aa15ee0f4.locator.tealgreen-services-subnet.service-instance-57804b5e-5cc5-4622-b672-d9809532874f.bosh[55221],a6bff813-aed6-484a-9cda-6fc0a2f7abe5.locator.tealgreen-services-subnet.service-instance-57804b5e-5cc5-4622-b672-d9809532874f.bosh[55221],c7b60808-ccca-4a33-82bd-7f3be6d1a565.locator.tealgreen-services-subnet.service-instance-57804b5e-5cc5-4622-b672-d9809532874f.bosh[55221]
spring.data.gemfire.security.username=cluster_operator_n9GxyoQb3FQLScEWrerWog
spring.data.gemfire.security.password=jR2R30Ul4iTOjfcnjQXCQ
service-gateway.hostname=tcp.tealgreen.cf-app.com
service-gateway.port=1102


#http.host and http.port are needed if you use @EnableClusterConfiguration
# hostname part from the gfsh url in the service key, port is always 443
spring.data.gemfire.management.http.host=cloudcache-57804b5e-5cc5-4622-b672-d9809532874f.sys.tealgreen.cf-app.com
spring.data.gemfire.management.http.port=443
